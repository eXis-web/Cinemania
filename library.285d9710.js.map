{"mappings":"gfACAA,EAAA,S,sBCDA,IAAAC,EAAAD,EAAA,S,aAOA,SAASE,EAAyBC,GA4ChC,OA3CeA,EACZC,KACC,SAAAC,G,IAAGC,EAASD,EAATC,UAAWC,EAAEF,EAAFE,GAAIC,EAAWH,EAAXG,YAAaC,EAAYJ,EAAZI,aAAcC,EAAKL,EAALK,MAAOC,EAAYN,EAAZM,aAAcC,EAAMP,EAANO,OAC1DC,EAAOJ,EAAaK,MAAM,EAAG,GAI7BC,GAHaP,GACf,kCAA8CQ,OAAZR,IAEZ,EAAAP,EAAAgB,2BAA0BN,IAC9CO,EAAeZ,GACjB,EAAAa,EAAAC,qBAAoBd,GAAWe,KAAK,MACpCT,EAAOR,KAAI,SAAAkB,G,OAASA,EAAMC,I,IAAMF,KAAK,MACnCG,EAAShB,EACX,wFAGGQ,OAD+BR,EAAY,oBACrCQ,OAANN,EAAM,eAER,8UASL,MAAO,qHAGsCM,OAD/BQ,EAAO,yDAGqBR,OAFGT,EAAG,gHAGRS,OADEN,EAAM,yDACUM,OAAlBE,EAAa,OAEHF,OAFQH,EAAK,gGAEKG,OAAlBD,EAAkB,iH,IAOvEM,KAAK,G,CC/CV,SAASI,EAAmBC,EAAOC,GACjC,OAAOD,EAAMZ,MAAM,EAAIa,EAAG,EAAIA,EAAI,E,CCI7B,IAAMC,EAAO,CAClBC,iBAAkBC,SAASC,cAAc,uBACzCC,gBAAiBF,SAASC,cAAc,4BACxCE,wBAAyBC,KAAKC,MAAMC,aAAaC,QAAQ,aAIhDC,EAAU,CACnBC,iBAAkBX,EAAKK,wBACnBO,KAAKC,KAAKb,EAAKK,wBAAwBS,OAAS,GAChD,EACJC,WAAY,GAITf,EAAKK,yBAA4BL,EAAKK,wBAAwBS,OAI7DJ,EAAQC,kBAAoB,GAC9BX,EAAKC,iBAAiBe,UAAY1C,EAChC0B,EAAKK,yBAEPL,EAAKC,iBAAiBgB,UAAUC,IAAI,iCAIpClB,EAAKC,iBAAiBe,UAAY1C,EAChCuB,EAAmBG,EAAKK,wBAAyBK,EAAQK,aCjC7Df,EAAKC,iBAAiBkB,mBACpB,WACC,8RDmCDT,EAAQK,YAAc,EAEtBf,EAAKC,iBAAiBgB,UAAUC,IAAI,wBAGpCE,mBAAqBlB,SAASC,cAAc,wBAC5CiB,mBAAmBC,iBAAiB,SExCxC,WAEEC,sBAAwBpB,SAASC,cAAc,4BAC/CoB,QAAQC,IAAIF,uBAERZ,EAAQC,mBAAqBD,EAAQK,WAAa,GACpDf,EAAKC,iBAAiBkB,mBACpB,YACA7C,EACEuB,EAAmBG,EAAKK,wBAAyBK,EAAQK,cAG7Df,EAAKC,iBAAiBgB,UAAUC,IAAI,+BACpClB,EAAKC,iBAAiBgB,UAAUQ,OAAO,wBACvCH,sBAAsBI,MAAMC,QAAU,SAGtC3B,EAAKC,iBAAiBkB,mBACpB,YACA7C,EACEuB,EAAmBG,EAAKK,wBAAyBK,EAAQK,cAG7DL,EAAQK,YAAc,E,MC1BxBf,EAAKI,gBAAgBY,UAAa,+RAUlChB,EAAKI,gBAAgBa,UAAUC,IAAI,yB,YNJrC,E,WAAAU,iBAEyB1B,SAAS2B,iBAAiB,yBAClCC,SAAQ,SAAAC,G,OAAKA,EAAEd,UAAUC,IAAI,a","sources":["src/library.js","src/js/functions/generateMovieCardsMarkup.js","src/js/functions/renderNumberOfCard.js","src/js/list-library.js","src/js/functions/renderButtonLoadMore.js","src/js/functions/renderLoadMoreCard.js","src/js/functions/renderLibraryOppsText.js"],"sourcesContent":["// Library js\nimport './js/header';\nimport './js/mobile-menu';\nimport './js/hero';\nimport './js/list-library';\nimport './js/footer';\nimport { setGenresToSS } from './js/functions/setGenresToSS';\n\nsetGenresToSS();\n\nconst headerLibCurrent = document.querySelectorAll('[data-header-library]');\nheaderLibCurrent.forEach(i => i.classList.add('js-current'));\n","import { generateRatingStarsMarkup } from './generateRatingStarsMarkup';\nimport { getGenresByGenresId } from './getGenresByGenresId';\n/**\n *\n * @param {Array} arr\n * @returns {String} markup for movie cards. You should insert resul inside <ul> by innerHTML\n */\nfunction generateMovieCardsMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ genre_ids, id, poster_path, release_date, title, vote_average, genres }) => {\n        const year = release_date.slice(0, 4);\n        const posterPath = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : './images/image-not-found.jpg';\n        const ratingStarsMurkup = generateRatingStarsMarkup(vote_average);\n        const genresString = genre_ids\n          ? getGenresByGenresId(genre_ids).join(', ')\n          : genres.map(genre => genre.name).join(', ');\n        const poster = poster_path\n          ? `<img\n        class=\"movie-details-img\"\n        src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n        alt=\"${title}\"\n      />`\n          : `<picture>\n        <source srcset=\"/src/images/image-not-found.webp\" type=\"image/webp\" />\n        <source srcset=\"/src/images/image-not-found.jpg\" type=\"image/jpeg\" />\n        <img\n          class=\"movie-details-img\"\n          src=\"/src/images/image-not-found.jpg\"\n          alt=\"Image not found\"\n        />\n      </picture>`;\n        return `<li class=\"cards-item\">\n                  <button type=\"button\" class=\"btn cards-item-btn\">\n                    ${poster}\n                    <div class=\"cards-content\" id=\"${id}\">\n                      <div class=\"cards-text-content\">\n                        <h3 class=\"cards-title\">${title}</h3>\n                        <p class=\"cards-text\">${genresString} | ${year}</p>\n                      </div>\n                      <div class=\"rating-stars-wrapper\">${ratingStarsMurkup}\n                      </div>\n                    </div>\n                  </button>\n                </li>`;\n      }\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { generateMovieCardsMarkup };\n","import { refs } from '../list-library';\n//====================make arrayCard for every page=================================\nfunction renderNumberOfCard(array, n) {\n  return array.slice(9 * n, 9 * n + 9);\n}\n\nexport { renderNumberOfCard };\n","// Library Page - Library list section\nimport { generateMovieCardsMarkup } from './functions/generateMovieCardsMarkup';\nimport { renderLibraryOppsText } from './functions/renderLibraryOppsText';\nimport { renderNumberOfCard } from './functions/renderNumberOfCard';\nimport { renderLoadMoreCard } from './functions/renderLoadMoreCard';\nimport { renderButtonLoadMore } from './functions/renderButtonLoadMore';\n\nexport const refs = {\n  libraryMovieList: document.querySelector('[data-library-list]'),\n  libraryOppsText: document.querySelector('[data-library-oops-text]'),\n  LibraryFromLocalStorage: JSON.parse(localStorage.getItem('library')),\n};\n\n//================Сount how many pages we have with cards==============================\nexport let letRefs = {\n  totalLibraryPage: refs.LibraryFromLocalStorage\n    ? Math.ceil(refs.LibraryFromLocalStorage.length / 9)\n    : 0,\n  curentPage: 0,\n};\n\n//================Check LocalStorage====================================================\nif (!refs.LibraryFromLocalStorage || !refs.LibraryFromLocalStorage.length) {\n  renderLibraryOppsText();\n} else {\n  //==============if total page < 1 - render first page without button==================\n  if (letRefs.totalLibraryPage <= 1) {\n    refs.libraryMovieList.innerHTML = generateMovieCardsMarkup(\n      refs.LibraryFromLocalStorage\n    );\n    refs.libraryMovieList.classList.add('movie-cards-list-css-no-btn');\n  } else {\n    //==============if page > 1 - render first page and Button \"load more\"==============\n\n    refs.libraryMovieList.innerHTML = generateMovieCardsMarkup(\n      renderNumberOfCard(refs.LibraryFromLocalStorage, letRefs.curentPage)\n    );\n\n    renderButtonLoadMore();\n    letRefs.curentPage += 1;\n\n    refs.libraryMovieList.classList.add('movie-cards-list-css');\n\n    //==================set event on Button \"Load more\"==================================\n    libraryLoadMoreBtn = document.querySelector('[data-load-more-btn]');\n    libraryLoadMoreBtn.addEventListener('click', renderLoadMoreCard);\n  }\n}\n","import { refs } from '../list-library';\nfunction renderButtonLoadMore() {\n  refs.libraryMovieList.insertAdjacentHTML(\n    'afterend',\n    `\n                        <div class=\"btn-list-search\" data-div-load-more-btn>\n                            <button type=\"button\" class=\"btn btn-filled\" data-load-more-btn>\n                            Load more\n                            </button>\n                        </div>`\n  );\n}\n\nexport { renderButtonLoadMore };\n","import { refs } from '../list-library';\nimport { letRefs } from '../list-library';\nimport { generateMovieCardsMarkup } from './generateMovieCardsMarkup';\nimport { renderNumberOfCard } from './renderNumberOfCard';\n\nfunction renderLoadMoreCard() {\n  //==================read div of button to delete div if no btn for css================================\n  libraryDivLoadMoreBtn = document.querySelector('[data-div-load-more-btn]');\n  console.log(libraryDivLoadMoreBtn);\n  // =================if the last page is left - render and hide the button============\n  if (letRefs.totalLibraryPage === letRefs.curentPage + 1) {\n    refs.libraryMovieList.insertAdjacentHTML(\n      'beforeend',\n      generateMovieCardsMarkup(\n        renderNumberOfCard(refs.LibraryFromLocalStorage, letRefs.curentPage)\n      )\n    );\n    refs.libraryMovieList.classList.add('movie-cards-list-css-no-btn');\n    refs.libraryMovieList.classList.remove('movie-cards-list-css');\n    libraryDivLoadMoreBtn.style.display = 'none';\n  } else {\n    //=================render next page and add +1 to  cuontpage=======================\n    refs.libraryMovieList.insertAdjacentHTML(\n      'beforeend',\n      generateMovieCardsMarkup(\n        renderNumberOfCard(refs.LibraryFromLocalStorage, letRefs.curentPage)\n      )\n    );\n    letRefs.curentPage += 1;\n  }\n}\n\nexport { renderLoadMoreCard };\n","import { refs } from '../list-library';\nfunction renderLibraryOppsText() {\n  refs.libraryOppsText.innerHTML = `\n        <p>OOPS...<br>\n        We are very sorry!<br>\n        You don’t have any movies at your library.</p>\n          <div class=\"btn-list-search\">\n          <a  href=\"./catalogue.html\" class=\"btn btn-filled\">\n          Search movie\n          </a>\n          </div>\n        `;\n  refs.libraryOppsText.classList.add('library-ops-text-css');\n}\n\nexport { renderLibraryOppsText };\n"],"names":["parcelRequire","$6xLQz","$1d88a178c3dff592$export$a0216a755aabdce4","arr","map","param","genre_ids","id","poster_path","release_date","title","vote_average","genres","year","slice","ratingStarsMurkup","concat","generateRatingStarsMarkup","genresString","$4cCwH","getGenresByGenresId","join","genre","name","poster","$6b660a395b41cfde$export$3e7bff8efe731ece","array","n","$164d6b9b3e69aac3$export$21666b427502ea6d","libraryMovieList","document","querySelector","libraryOppsText","LibraryFromLocalStorage","JSON","parse","localStorage","getItem","$164d6b9b3e69aac3$export$90f8e97de6521056","totalLibraryPage","Math","ceil","length","curentPage","innerHTML","classList","add","insertAdjacentHTML","libraryLoadMoreBtn","addEventListener","libraryDivLoadMoreBtn","console","log","remove","style","display","setGenresToSS","querySelectorAll","forEach","i"],"version":3,"file":"library.285d9710.js.map"}