{"mappings":"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","sources":["src/index.js","src/js/trends.js","src/js/functions/generateMovieCardsMarkup.js","src/js/functions/onMovieCardClick.js","src/js/upcoming.js","src/js/functions/generateUpcomingSectionMarkup.js","src/js/functions/generateUpcomingLibraryBtnMarkup.js","src/js/functions/onUpcomingLibraryBtnRemoveClick.js","src/js/functions/onUpcomingLibraryBtnAddClick.js","src/js/functions/addAppropriateListenerUpcoming.js"],"sourcesContent":["// Index.js\nimport './js/header';\nimport './js/mobile-menu';\nimport './js/hero';\nimport './js/trends';\nimport './js/upcoming';\nimport './js/footer';\nimport './js/modal-trailer';\nimport './js/modal-movie-details';\nimport { setGenresToSS } from './js/functions/setGenresToSS';\n\nsetGenresToSS();\n\nconst headerCurrent = document.querySelectorAll('[data-header-home]');\nheaderCurrent.forEach(i => i.classList.add('js-current'));\n\n","// Weekly trends js\nimport { fetchWeekTrends } from './functions/movieApiService';\nimport { generateMovieCardsMarkup } from './functions/generateMovieCardsMarkup';\nimport { onMovieCardClick } from './functions/onMovieCardClick';\nimport { upcommingTrendsDefaultEl } from './upcoming';\n\nconst weeklyTrendsList = document.querySelector('[data-weekly-trends-list]');\nconst weeklyTrendsCardsEl = document.querySelector('.js-weekly-trends-cards');\nconst weeklyTrendsDefaultEl = document.querySelector(\n  '.js-weekly-trends-default'\n);\n\nconst moviesNumber = window.innerWidth < 768 ? 1 : 3;\n\nrenderWeeklyTrendsItems();\n\nasync function renderWeeklyTrendsItems() {\n  try {\n    const response = await fetchWeekTrends();\n    const moviesToRender = response.results.slice(0, moviesNumber);\n    const weeklyTrendsMarkup = generateMovieCardsMarkup(moviesToRender);\n    weeklyTrendsList.innerHTML = weeklyTrendsMarkup;\n\n    weeklyTrendsList.addEventListener('click', e => {\n      onMovieCardClick(e);\n    });\n  } catch (error) {\n    console.error(error.message);\n    weeklyTrendsCardsEl.classList.add('visually-hidden');\n    weeklyTrendsDefaultEl.setAttribute('data-shown', true);\n    if (upcommingTrendsDefaultEl.getAttribute('data-shown') === 'true') {\n      upcommingTrendsDefaultEl.lastElementChild.textContent =\n        'We don’t have any results.';\n\n      return;\n    }\n    weeklyTrendsDefaultEl.classList.remove('visually-hidden');\n  }\n}\n\nexport { weeklyTrendsDefaultEl };\n","import { generateRatingStarsMarkup } from './generateRatingStarsMarkup';\nimport { getGenresByGenresId } from './getGenresByGenresId';\n/**\n *\n * @param {Array} arr\n * @returns {String} markup for movie cards. You should insert resul inside <ul> by innerHTML\n */\nfunction generateMovieCardsMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ genre_ids, id, poster_path, release_date, title, vote_average, genres }) => {\n        const year = release_date.slice(0, 4);\n        const posterPath = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : './images/image-not-found.jpg';\n        const ratingStarsMurkup = generateRatingStarsMarkup(vote_average);\n        const genresString = genre_ids\n          ? getGenresByGenresId(genre_ids).join(', ')\n          : genres.map(genre => genre.name).join(', ');\n        const poster = poster_path\n          ? `<img\n        class=\"movie-details-img\"\n        src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n        alt=\"${title}\"\n      />`\n          : `<picture>\n        <source srcset=\"/src/images/image-not-found.webp\" type=\"image/webp\" />\n        <source srcset=\"/src/images/image-not-found.jpg\" type=\"image/jpeg\" />\n        <img\n          class=\"movie-details-img\"\n          src=\"/src/images/image-not-found.jpg\"\n          alt=\"Image not found\"\n        />\n      </picture>`;\n        return `<li class=\"cards-item\">\n                  <button type=\"button\" class=\"btn cards-item-btn\">\n                    ${poster}\n                    <div class=\"cards-content\" id=\"${id}\">\n                      <div class=\"cards-text-content\">\n                        <h3 class=\"cards-title\">${title}</h3>\n                        <p class=\"cards-text\">${genresString} | ${year}</p>\n                      </div>\n                      <div class=\"rating-stars-wrapper\">${ratingStarsMurkup}\n                      </div>\n                    </div>\n                  </button>\n                </li>`;\n      }\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { generateMovieCardsMarkup };\n","import { openModalMovieDetails } from './openModalMovieDetails';\n\nfunction onMovieCardClick(e) {\n  if (e.target.nodeName !== 'DIV') {\n    return;\n  }\n\n  const movieCardBtn = e.target;\n  const movieId = movieCardBtn.getAttribute('id');\n  openModalMovieDetails(movieId);\n}\n\nexport { onMovieCardClick };\n","// Upcoming this month js\nimport { fetchUpcomingThisMonth } from './functions/movieApiService';\nimport { generateUpcomingSectionMarkup } from './functions/generateUpcomingSectionMarkup';\nimport { addAppropriateListenerUpcoming } from './functions/addAppropriateListenerUpcoming';\nimport { weeklyTrendsDefaultEl } from './trends';\n\nconst upcommingTrendsCardsEl = document.querySelector('.js-upcomming-cards');\nconst upcommingTrendsDefaultEl = document.querySelector(\n  '.js-upcomming-default'\n);\n\ngettingMovie();\nasync function gettingMovie() {\n  try {\n    const data = await fetchUpcomingThisMonth();\n    const uncomingArray = data.results;\n    const randomMovie =\n      uncomingArray[Math.floor(Math.random() * uncomingArray.length)];\n    const upcomingConatainer = document.querySelector('[data-upcoming]');\n    upcomingConatainer.innerHTML = generateUpcomingSectionMarkup(randomMovie);\n\n    const isAddBtn = upcomingConatainer.innerHTML.includes('Add to library');\n    const btnClasses = 'btn btn-filled';\n    addAppropriateListenerUpcoming(isAddBtn, btnClasses, randomMovie.id, randomMovie);\n  } catch (error) {\n    console.error(error.message);\n    upcommingTrendsCardsEl.classList.add('visually-hidden');\n    upcommingTrendsDefaultEl.setAttribute('data-shown', true);\n    if (weeklyTrendsDefaultEl.getAttribute('data-shown') === 'true') {\n      weeklyTrendsDefaultEl.lastElementChild.textContent =\n        'We don’t have any results.';\n      return;\n    }\n    upcommingTrendsDefaultEl.classList.remove('visually-hidden');\n  }\n}\n\nexport { upcommingTrendsDefaultEl };\n","import { getGenresByGenresId } from './getGenresByGenresId';\nimport { generateUpcomingLibraryBtnMarkup } from './generateUpcomingLibraryBtnMarkup';\n\nfunction generateUpcomingSectionMarkup({\n  backdrop_path,\n  title,\n  genre_ids,\n  overview,\n  popularity,\n  poster_path,\n  release_date,\n  vote_average,\n  vote_count,\n  id,\n}) {\n  const genres = getGenresByGenresId(genre_ids).join(', ');\n  const classes = 'btn btn-filled';\n\n  return ` <picture>\n      <source\n        srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\"\n        media=\"(min-width:1280px)\"\n      />\n      <source\n        srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\"\n        media=\"(min-width:768px)\"\n      />\n      <source\n        srcset=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n        media=\"(min-width:320px)\"\n      />\n      <img\n        class=\"upcoming-movie-img\"\n        src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n        alt=\"${title}\"\n      />\n    </picture>\n    \n    <div class=\"upcoming-column\">\n      <h2 class=\"upcoming-headline\">${title}</h2>\n      <div class=\"upcoming-wrap\">\n        <div class=\"upcoming-inner-wrap\">\n          <div class=\"upcoming-wrapper upcoming-wrapper-gap\">\n            <ul class=\"upcoming-list\">\n              <li class=\"upcoming-item-data\">\n                <p class=\"upcoming-subject\">Release date</p>\n              </li>\n              <li class=\"upcoming-item-data-num\">\n                <p class=\"upcoming-date\">${release_date\n                  .split('-')\n                  .reverse()\n                  .join('.')}</p>\n              </li>\n            </ul>\n    \n            <ul class=\"upcoming-list\">\n              <li class=\"upcoming-item-vote\">\n                <p class=\"upcoming-subject\">Vote / Votes</p>\n              </li>\n              <li class=\"upcoming-item-vote-num\">\n                <p class=\"upcoming-vote\">\n                  <span class=\"upcoming-inner-box\">${vote_average}</span>\n                  <span class=\"upcoming-inner-color\">/</span>\n                  <span class=\"upcoming-inner-box-votes\">${vote_count}</span>\n                </p>\n              </li>\n            </ul>\n          </div>\n          <div class=\"upcoming-wrapper\">\n            <ul class=\"upcoming-list\">\n              <li class=\"upcoming-item-pop\">\n                <p class=\"upcoming-subject\">Popularity</p>\n              </li>\n              <li class=\"upcoming-item-pop-num\">\n                <p class=\"upcoming-famous\">${popularity.toFixed(1)}</p>\n              </li>\n            </ul>\n    \n            <ul class=\"upcoming-list\">\n              <li class=\"upcoming-item-genre\">\n                <p class=\"upcoming-subject\">Genre</p>\n              </li>\n              <li class=\"upcoming-item-genre-num\">\n                <p class=\"upcoming-janres\">${genres}</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n    \n        <h3 class=\"upcoming-caption\">About</h3>\n        <p class=\"upcoming-description\">\n          ${overview}\n        </p>\n        <div class=\"library-btn-upcoming\" data-library-btn-upcoming>\n          ${generateUpcomingLibraryBtnMarkup(classes, id)}\n        </div>\n      </div>\n    </div>`;\n}\n\nexport { generateUpcomingSectionMarkup };\n","/**\n *\n * @param {Object} classes Classes to add to button\n * @param {String} movieId Movie ID\n * @returns {String} Button markup\n */\n\nfunction generateUpcomingLibraryBtnMarkup(classes, movieId) {\n  const filmsInLibrary = localStorage.getItem('library');\n\n  if (!filmsInLibrary) {\n    return `<button type=\"button\" data-add-to-library-btn-upcoming class=\"${classes}\">Add to library</button>`;\n  } else {\n    const parsedFilmsInLibrary = JSON.parse(filmsInLibrary);\n    const isInLibrary = parsedFilmsInLibrary.find(\n      object => object.id === movieId\n    );\n    return isInLibrary\n      ? `<button type=\"button\" data-remove-from-library-btn-upcoming class=\"${classes}\">Remove from library</button>`\n      : `<button type=\"button\" data-add-to-library-btn-upcoming class=\"${classes}\">Add to library</button>`;\n  }\n}\n\nexport { generateUpcomingLibraryBtnMarkup };\n","import { generateUpcomingLibraryBtnMarkup } from './generateUpcomingLibraryBtnMarkup';\nimport { onUpcomingLibraryBtnAddClick } from './onUpcomingLibraryBtnAddClick';\nimport { removeMovieFromLibrary } from './removeMovieFromLibrary';\n\n/**\n * Sets local storage item with key 'library' and value of Array of movie objects. Removes item\n * @param {*} movieObject\n */\nfunction onUpcomingLibraryBtnRemoveClick(classes, id, movieObject) {\n  removeMovieFromLibrary(movieObject);\n  const libraryBtnContainer = document.querySelector('[data-library-btn-upcoming]');\n\n  const changedlibraryBtn = generateUpcomingLibraryBtnMarkup(classes, id);\n  libraryBtnContainer.innerHTML = changedlibraryBtn;\n\n  const libraryBtnAdd = document.querySelector('[data-add-to-library-btn-upcoming]');\n  libraryBtnAdd.addEventListener(\n    'click',\n    () => {\n      onUpcomingLibraryBtnAddClick(classes, id, movieObject);\n    },\n    { once: true }\n  );\n}\n\nexport { onUpcomingLibraryBtnRemoveClick };\n","import { generateUpcomingLibraryBtnMarkup } from './generateUpcomingLibraryBtnMarkup';\nimport { onUpcomingLibraryBtnRemoveClick } from './onUpcomingLibraryBtnRemoveClick';\nimport { addMovieToLibrary } from './addMovieToLibrary';\n\n/**\n * Sets local storage item with key 'library' and value of Array of movie objects. Adds Item.\n * @param {*} classes\n * @param {*} id\n * @param {*} movieObject\n */\nfunction onUpcomingLibraryBtnAddClick(classes, id, movieObject) {\n  addMovieToLibrary(movieObject);\n\n  const libraryBtnContainer = document.querySelector(\n    '[data-library-btn-upcoming]'\n  );\n\n  const changedlibraryBtn = generateUpcomingLibraryBtnMarkup(classes, id);\n  libraryBtnContainer.innerHTML = changedlibraryBtn;\n  const libraryBtnRemove = document.querySelector(\n    '[data-remove-from-library-btn-upcoming]'\n  );\n  libraryBtnRemove.addEventListener(\n    'click',\n    () => {\n      onUpcomingLibraryBtnRemoveClick(classes, id, movieObject);\n    },\n    { once: true }\n  );\n}\n\nexport { onUpcomingLibraryBtnAddClick };\n","import { onUpcomingLibraryBtnAddClick } from './onUpcomingLibraryBtnAddClick';\nimport { onUpcomingLibraryBtnRemoveClick } from './onUpcomingLibraryBtnRemoveClick';\n\nfunction addAppropriateListenerUpcoming(isAddBtn, btnClasses, id, movieObject) {\n  if (isAddBtn) {\n    const libraryBtnAdd = document.querySelector(\n      '[data-add-to-library-btn-upcoming]'\n    );\n    libraryBtnAdd.addEventListener(\n      'click',\n      () => {\n        onUpcomingLibraryBtnAddClick(btnClasses, id, movieObject);\n      },\n      { once: true }\n    );\n  } else {\n    const libraryBtnRemove = document.querySelector(\n      '[data-remove-from-library-btn-upcoming]'\n    );\n    libraryBtnRemove.addEventListener(\n      'click',\n      () => {\n        onUpcomingLibraryBtnRemoveClick(btnClasses, id, movieObject);\n      },\n      { once: true }\n    );\n  }\n}\n\nexport { addAppropriateListenerUpcoming };\n"],"names":["parcelRequire","$ffJBb","$aNFDY","$kICWm","$812d1721f4b6d014$export$2d08c7f0d0e4b2d5","e","target","nodeName","movieId","getAttribute","openModalMovieDetails","$2ZOXv","$74ffc3d418cc4882$export$60aadeff81d4449d","classes","filmsInLibrary","localStorage","getItem","JSON","parse","find","object","id","$b6c3995dc8b8a0c5$export$38eb1fd69e84b0a","backdrop_path","title","genre_ids","overview","popularity","poster_path","release_date","vote_average","vote_count","genres","getGenresByGenresId","join","split","reverse","toFixed","$66f0fc999b097f3c$export$2594b7fc767d7dd3","movieObject","$7m44f","removeMovieFromLibrary","libraryBtnContainer","document","querySelector","changedlibraryBtn","innerHTML","addEventListener","$081a46215bbe8b63$export$8b8cb093d52b664c","once","$icwvE","addMovieToLibrary","$864194f3c8980694$export$e36b488a81f37e1f","isAddBtn","btnClasses","$65414923e0a79c46$var$upcommingTrendsCardsEl","$65414923e0a79c46$export$e620f2a78150699b","async","uncomingArray","fetchUpcomingThisMonth","results","randomMovie","Math","floor","random","length","upcomingConatainer","includes","error","console","message","classList","add","setAttribute","$69f116c65cf4dd06$export$905688e3e0e36afe","lastElementChild","textContent","remove","$65414923e0a79c46$var$gettingMovie","$69f116c65cf4dd06$var$weeklyTrendsList","$69f116c65cf4dd06$var$weeklyTrendsCardsEl","$69f116c65cf4dd06$var$moviesNumber","window","innerWidth","moviesToRender","fetchWeekTrends","slice","weeklyTrendsMarkup","map","year","ratingStarsMurkup","generateRatingStarsMarkup","genre","name","$69f116c65cf4dd06$var$renderWeeklyTrendsItems","setGenresToSS","querySelectorAll","forEach","i"],"version":3,"file":"index.4cba5c10.js.map"}